{"name": "test_enterDataInForm", "status": "broken", "statusDetails": {"message": "AttributeError: png", "trace": "self = <AppiumFrameWork.tests.ContactUsFormTest.ContactFormTest testMethod=test_enterDataInForm>\n\n    @pytest.mark.run(order=2)\n    def test_enterDataInForm(self):\n        self.cf.enterName()\n        self.cf.enterEmail()\n        self.cf.enterAddress()\n>       self.cf.enterMNumber()\n\nContactUsFormTest.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n../pages/ContactUsFormPage.py:41: in enterMNumber\n    self.sendText(\"987654210\", \"self._enterMobileNumber\", \"text\")\n../base/BasePage.py:99: in sendText\n    self.takeScreenShot(locatorType)\n../base/BasePage.py:103: in takeScreenShot\n    allure.attach(self.driver.get_screenshot_as_png(),name= text, attachment_type=AttachmentType.png)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncls = <enum 'AttachmentType'>, name = 'png'\n\n    def __getattr__(cls, name):\n        \"\"\"Return the enum member matching `name`\n    \n        We use __getattr__ instead of descriptors or inserting into the enum\n        class' __dict__ in order to support `name` and `value` being both\n        properties for enum members (which live in the class' __dict__) and\n        enum members themselves.\n    \n        \"\"\"\n        if _is_dunder(name):\n            raise AttributeError(name)\n        try:\n            return cls._member_map_[name]\n        except KeyError:\n>           raise AttributeError(name) from None\nE           AttributeError: png\n\n/usr/lib/python3.7/enum.py:349: AttributeError"}, "steps": [{"name": "Enter Name", "status": "passed", "start": 1603209102232, "stop": 1603209102232}, {"name": "Enter Email", "status": "passed", "start": 1603209103435, "stop": 1603209103435}, {"name": "Enter Address", "status": "passed", "start": 1603209104691, "stop": 1603209104691}], "attachments": [{"name": "log", "source": "6e8190e2-f015-4bab-a6f5-3c1619d5f3f2-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "9fbc6b48-0cb4-4bb2-9008-aa728b5df498-attachment.txt", "type": "text/plain"}], "start": 1603209101476, "stop": 1603209126180, "uuid": "0d37f89c-ea5a-41a6-b7c8-6d852a94925b", "historyId": "6444df4ec6f393ee9ec3ede1549bb632", "testCaseId": "5c97ed56f77d2b257b93c39ac44cc825", "fullName": "ContactUsFormTest.ContactFormTest#test_enterDataInForm", "labels": [{"name": "tag", "value": "run(order=2)"}, {"name": "tag", "value": "@pytest.mark.usefixtures('beforeClass', 'setUp')"}, {"name": "suite", "value": "ContactUsFormTest"}, {"name": "subSuite", "value": "ContactFormTest"}, {"name": "host", "value": "candi-ThinkPad-E480"}, {"name": "thread", "value": "29964-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "ContactUsFormTest"}]}