{"name": "test_openloginpage", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <AppiumFrameWork.tests.LoginPageTest.LoginTest testMethod=test_openloginpage>\n\n    @pytest.mark.run(order=1)\n    def test_openloginpage(self):\n        cl.allureLogs(\"App Launched.\")\n>       self.gt.clickLoginBtn()\n\nLoginPageTest.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n../pages/LoginPage.py:23: in clickLoginBtn\n    self.waitForElement(self._loginButton, \"id\")\n../base/BasePage.py:22: in waitForElement\n    element = wait.until(lambda x: x.find_element_by_android_uiautomator(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"8719f7f6-34b6-419e-80ca-7236a96efbc6\")>\nmethod = <function BasePage.waitForElement.<locals>.<lambda> at 0x7f0f8d45b320>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../../venv/lib/python3.7/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException"}, "steps": [{"name": "App Launched.", "status": "passed", "start": 1603384993602, "stop": 1603384993602}], "attachments": [{"name": "stdout", "source": "5ccdafca-c335-4c67-83d0-6355a3dbb38d-attachment.txt", "type": "text/plain"}], "start": 1603384993602, "stop": 1603385013674, "uuid": "5ca16cf2-79fb-4ecf-8e4f-0a86da291887", "historyId": "661b8f505623194a6bc3deedb6b71506", "testCaseId": "969a6839e0554993346791e4b40389b0", "fullName": "LoginPageTest.LoginTest#test_openloginpage", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('beforeClass', 'setUp')"}, {"name": "tag", "value": "run(order=1)"}, {"name": "suite", "value": "LoginPageTest"}, {"name": "subSuite", "value": "LoginTest"}, {"name": "host", "value": "candi-ThinkPad-E480"}, {"name": "thread", "value": "3312-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "LoginPageTest"}]}